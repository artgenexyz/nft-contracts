let ps1adj=[];let ps2adj=[];let allColors=[];let allColors2=[];let thetarand=[];let ptsmax=[];let ptsmin=[];let pts=[];let increment=[];let ptsrev=[];let ps1=[];let ps2=[];let ps1LR=[];let ps2LR=[];let ps1LRMod=[];let ps2LRMod=[];let ps1LRFE=[];let ps2LRFE=[];let ps1Diff=[];let ps2Diff=[];let ps1NewLR=[];let ps2NewLR=[];let ctrX,ctrY;let pt1=[];let pt2=[];let pt3=[];let pt4=[];let pt5=[];let pt6=[];let pt7=[];let pt8=[];let pt9=[];let pt10=[];let pt11=[];let pt12=[];let stAlpha=[];let midAlpha1=[];let midAlpha2=[];let midAlpha3=[];let alphaArray=[];let alpInt=[];let alpIntFull=[];let scX1rand2=[];let scY1rand2=[];let scX2rand2=[];let scY2rand2=[];let scX3rand2=[];let scY3rand2=[];let scX4rand2=[];let scY4rand2=[];let scX5rand2=[];let scY5rand2=[];let scX6rand2=[];let scY6rand2=[];let scX7rand2=[];let scY7rand2=[];let scX8rand2=[];let scY8rand2=[];let scX9rand2=[];let scY9rand2=[];let scX10rand2=[];let scY10rand2=[];let scX11rand2=[];let scY11rand2=[];let scX12rand2=[];let scY12rand2=[];let randCn1=[];let randCn2=[];let randCn3=[];let randCn4=[];let randCn5=[];let randCn6=[];let randCn7=[];let randCn8=[];let randCn9=[];let randCn10=[];let randCn11=[];let sizAdj=[];let plotst=[];let delta=[];let ctrpoint=[];let ptnum=[];let theta=[];let randCnhi=[];let colors=[];let colors2=[];let clAmLo=[];let clAmHi=[];let clAm=[];let clBt=[];let clBt2=[];let lastColor=[];let lastColor2=[];let bordColor=[];let hueAlter=[];let stAlt=[];let stAlt2=[];let brtAlt=[];let brtAlt2=[];let alAlt=[];let alphaValue=[];let clChoice=[];let clScheme=[];let sclfac=[];let clrDk=[];let static=[];let stProb=[];let grnAm=[];let ltDk=[];let ltDkProb=[];let stAlAdj=[];function setup(){createCanvas(windowWidth,windowHeight);scaleCanvas(this);colorMode(HSB,360,100,100,100);fr=15;frameRate(fr);ltDk=rand();ltDkProb=.3;static=rand();stProb=.2;if(static<stProb){pixelDensity(4)}else{pixelDensity(2)}console.log("pixeldensity:",pixelDensity());console.log("static:",static);thetarand=round(rand(25,35));sclfac=rand(.1,.75);let l=10;randCnhi=40;if(thetarand<31){ptnum=round(rand(100,125));sclfac=rand(.1,.5);sizAdj=rand(.65,.85)}else{ptnum=round(rand(125,150));sclfac=rand(.1,.65);sizAdj=rand(.6,.825)}ps1adj=width*sizAdj;ps2adj=ps1adj;console.log("sizAdj:",sizAdj);console.log("sclfac:",sclfac);console.log("thetarand:",thetarand);console.log("ptnum:",ptnum);plotst=round(ptnum*0)+1;delta=rand(.02,.05);console.log("delta:",delta);stAlpha=(1,10);midAlpha1=rand(5,20);midAlpha2=rand(1,10);midAlpha3=rand(20,40);stAlAdj=rand(.8,.95);stAlt=rand(25,35);console.log("stAlt:",stAlt);brtAlt=rand(0,10);console.log("brtAlt:",brtAlt);stAlt2=rand(25,35);console.log("stAlt2:",stAlt2);brtAlt2=rand(0,0);console.log("brtAlt2:",brtAlt2);clChoice=rand();console.log("clChoice:",clChoice);clScheme=rand(0,1);console.log("clScheme:",clScheme);clAmLo=1;clAmHi=3;clAm=round(rand(clAmLo,clAmHi));console.log("clAm:",clAm);ptsmax=rand(.25,.45)*sizAdj;console.log("ptsmax:",ptsmax);ptsmin=.02;grnAm=rand(15,35);randCn1=round(rand(l,randCnhi));randCn2=round(rand(l,randCnhi));randCn3=round(rand(l,randCnhi));randCn4=round(rand(l,randCnhi));randCn5=round(rand(l,randCnhi));randCn6=round(rand(l,randCnhi));randCn7=round(rand(l,randCnhi));randCn8=round(rand(l,randCnhi));randCn9=round(rand(l,randCnhi));randCn10=round(rand(l,randCnhi));randCn11=round(rand(l,randCnhi));scX1rand2=rand(1-sclfac,1+sclfac);scY1rand2=rand(1-sclfac,1+sclfac);scX2rand2=rand(1-sclfac,1+sclfac);scY2rand2=rand(1-sclfac,1+sclfac);scX3rand2=rand(1-sclfac,1+sclfac);scY3rand2=rand(1-sclfac,1+sclfac);scX4rand2=rand(1-sclfac,1+sclfac);scY4rand2=rand(1-sclfac,1+sclfac);scX5rand2=rand(1-sclfac,1+sclfac);scY5rand2=rand(1-sclfac,1+sclfac);scX6rand2=rand(1-sclfac,1+sclfac);scY6rand2=rand(1-sclfac,1+sclfac);scX7rand2=rand(1-sclfac,1+sclfac);scY7rand2=rand(1-sclfac,1+sclfac);scX8rand2=rand(1-sclfac,1+sclfac);scY8rand2=rand(1-sclfac,1+sclfac);scX9rand2=rand(1-sclfac,1+sclfac);scY9rand2=rand(1-sclfac,1+sclfac);scX10rand2=rand(1-sclfac,1+sclfac);scY10rand2=rand(1-sclfac,1+sclfac);scX11rand2=rand(1-sclfac,1+sclfac);scY11rand2=rand(1-sclfac,1+sclfac);scX12rand2=rand(1-sclfac,1+sclfac);scY12rand2=rand(1-sclfac,1+sclfac);let e=[color("#eb9f82"),color("#c5af9f"),color("#bd2f15"),color("#bd2f15"),color("#c25d1b")];let t=[color("#fcc5a2"),color("#bd9137"),color("#bd774a"),color("#f1c740"),color("#f3bb1c")];let o=[color("#026558"),color("#20404b"),color("#f38b07"),color("#c5ed4b"),color("#3f002b")];let r=[color("#F50700"),color("#d8683c"),color("#092362"),color("#72d902"),color("#712b4c")];let c=[color("#e53a61"),color("#c80947"),color("#933059"),color("#c04ea4"),color("#c0b137")];let s=[color("#083747"),color("#081878"),color("#525792"),color("#407b62"),color("#c6a038")];let a=[color("#1b45b9"),color("#fdae5f"),color("#9b0022"),color("#ffe418")];let n=[color("#0466ae"),color("#e39448"),color("#e8c800"),color("#e55cb5")];let p=[color("#08175a"),color("#cd062e"),color("#52b6e0"),color("#f04ac1")];let d=[color("#eec0b8"),color("#721921"),color("#ea7e95"),color("#ad6389"),color("#ea7e95")];let i=[color("#282121"),color("#c17256"),color("#c30430"),color("#de2a5d"),color("#d6a803")];let f=[color("#1d0252"),color("#f8ca69"),color("#7a05db"),color("#5300f3"),color("#ed526c")];let h=[color("#300091"),color("#f2724e"),color("#5300f3"),color("#b200df"),color("#f69e5c")];let C=[color("#336e77"),color("#cdbbcc"),color("#2d4554"),color("#f6c4eb"),color("#978691"),color("#4c373a")];let x=[color("#0d1317"),color("#d99293"),color("#2e4453"),color("#75205e"),color("#85535f")];let g=[color("#f74a55"),color("#0F5001"),color("#e3dedf"),color("#74bcdb"),color("#001f68")];let u=[color("#c4cdd0"),color("#74bcdb"),color("#ffbeb6"),color("#54383a"),color("#00379e")];let v=[color("#d4e037"),color("#62032f"),color("#c51216"),color("#b0201f")];let y=[color("#4f1a67"),color("#350956"),color("#01144e"),color("#0e5a85")];let A=[color("#002f78"),color("#b2ae41"),color("#58283f"),color("#0f0024")];let m=[color("#226a9d"),color("#d9b38a"),color("#0d804b"),color("#61446f")];let b=[color("#496976"),color("#712867"),color("#020d73"),color("#800021")];let j=[color("#e1afa3"),color("#d5d7c5"),color("#b9c8b2"),color("#eccfac")];let S=[color("#f6eb9f"),color("#f0e2ca"),color("#f0ceb7"),color("#e8beaf")];let X=[color("#0f899e"),color("#67b1a1"),color("#b07a7d"),color("#8f707d")];let Y=[color("#7fa494"),color("#c96d8d"),color("#885675"),color("#eaaab2")];let k=[color("#438b07"),color("#b3e63b"),color("#95b837"),color("#187c25"),color("#2c695b")];let D=[color("#01fec3"),color("#011290"),color("#01eba0"),color("#0294a4"),color("#015391"),color("#026da2")];let P=[color("#eba932"),color("#f6c22f"),color("#fcdb9d"),color("#e18a03"),color("#fad660"),color("#e3a305")];let L=[color("#FF0000"),color("#FFA500"),color("#FFFF00"),color("#00FF00"),color("#0000FF"),color("#4B0082"),color("#EE82EE")];let R=[color("#040403"),color("#1B1212"),color("#0e1519"),color("#0d1317"),color("#020000"),color("#0d0303"),color("#0b0003"),color("#000408"),color("#030300"),color("#0a0100"),color("#000505"),color("#00030a"),color("#000000"),color("#000000"),color("#000000"),color("#000000")];clrDk=R.slice();clrDk=seededShuffle(clrDk);clrDk=clrDk[0];if(clChoice<1/29){colors=e}else if(clChoice<2/29){colors=t}else if(clChoice<3/29){colors=o}else if(clChoice<4/29){colors=r}else if(clChoice<5/29){colors=c}else if(clChoice<6/29){colors=s}else if(clChoice<7/29){colors=a}else if(clChoice<8/29){colors=n}else if(clChoice<9/29){colors=p}else if(clChoice<10/29){colors=d}else if(clChoice<11/29){colors=i}else if(clChoice<12/29){colors=f}else if(clChoice<13/29){colors=h}else if(clChoice<14/29){colors=C}else if(clChoice<15/29){colors=x}else if(clChoice<16/29){colors=g}else if(clChoice<17/29){colors=u}else if(clChoice<18/29){colors=v}else if(clChoice<19/29){colors=y}else if(clChoice<20/29){colors=A}else if(clChoice<21/29){colors=m}else if(clChoice<22/29){colors=b}else if(clChoice<23/29){colors=j}else if(clChoice<24/29){colors=S}else if(clChoice<25/29){colors=X}else if(clChoice<26/29){colors=Y}else if(clChoice<27/29){colors=k}else if(clChoice<28/29){colors=D}else if(clChoice<28.7/29){colors=P}else{colors=L;clAm=7}for(let l=0;l<colors.length;l++){let e=colors[l];let t=hue(e);let o=saturation(e);let r=brightness(e);let c=alpha(e);let s=color(t,o,r,c);colors2.push(s)}let w=[];let F=[];let E=[];let M=[];for(let l=0;l<clAm;l++){E=floor(rand(colors.length));M=colors[E];w.push(M);colors.splice(E,1);E=floor(rand(colors2.length));M=colors2[E];F.push(M);colors2.splice(E,1)}let z=w;let N=F;z=seededShuffle(z);N=seededShuffle(N);lastcolor=z[z.length-1];z.unshift(lastcolor);lastcolor2=N[N.length-1];N.unshift(lastcolor2);let B=1/(ptnum/(z.length-1));for(let l=0;l<z.length-1;l++){for(let e=0;e<ptnum/(z.length-1);e++){let t=e*B;clBt=betterLerpColorHSB(z[l],z[l+1],t);allColors.push(clBt);clBt2=betterLerpColorHSB(N[l],N[l+1],t);allColors2.push(clBt2)}}for(let l=0;l<allColors.length;l++){let e=l/(allColors.length-1);if(e<.25){alpInt=map(e,0,.25,stAlpha,midAlpha1)}else if(e<.5){alpInt=map(e,.25,.5,midAlpha1,midAlpha2)}else if(e<.75){alpInt=map(e,.5,.75,midAlpha2,midAlpha3)}else{alpInt=map(e,.75,1,midAlpha3,stAlpha)}alpIntFull.push(alpInt)}for(let l=0;l<allColors.length;l++){alphaValue=alpIntFull[l];allColors[l].setAlpha(alphaValue);allColors2[l].setAlpha(alphaValue)}for(let l=0;l<allColors.length;l++){let e=allColors[l];let t=hue(e);let o=saturation(e);let r=brightness(e);let c=alpha(e);o=constrain(o+stAlt,0,100);r=constrain(r+brtAlt,0,100);let s=color(t,o,r,c);allColors[l]=s}for(let l=0;l<allColors2.length;l++){let e=allColors2[l];let t=hue(e);let o=saturation(e);let r=brightness(e);let c=alpha(e);o=constrain(o+stAlt2,0,100);r=constrain(r+brtAlt2,0,100);let s=color(t,o,r,c);allColors2[l]=s}bordColor=allColors[0];let V=ptsmax/ptnum;for(let l=1;l<=ptnum;l++){pts.push(ptsmin+l*V)}ptsrev=pts.slice();ptsrev.reverse();pts=ptsrev;for(let l=0;l<=rand(360,360);l+=thetarand){theta.push(l)}for(let l=0;l<theta.length;l++){theta[l]*=2*Math.PI/360}let I=theta.map((function(l){return Math.cos(l)}));let H=theta.map((function(l){return Math.sin(l)}));ps1=[I];ps2=[H];let O=ps1[0].length;let W=Array.from(Array(O).keys());W=seededShuffle(W);ps1=ps1.map((l=>W.map((e=>l[e]))));ps2=ps2.map((l=>W.map((e=>l[e]))));ctrX=width/2;ctrY=height/2;console.log("ltDkProb",ltDkProb);console.log("ltDk",ltDk);const T=round(360/thetarand);Artgene.evolve("Number of Curves",T.toString());if(static<=stProb){Artgene.evolve("Type","Static")}else{Artgene.evolve("Type","Animated")}if(ltDk<=ltDkProb){Artgene.evolve("Background","Light")}else{Artgene.evolve("Background","Dark")}if(clScheme<.25){Artgene.evolve("Color Scheme","standard-1")}else if(clScheme<.5){Artgene.evolve("Color Scheme","standard-2")}else if(clScheme<.6){Artgene.evolve("Color Scheme","uncommon-1")}else if(clScheme<.7){Artgene.evolve("Color Scheme","uncommon-2")}else if(clScheme<.8){Artgene.evolve("Color Scheme","uncommon-3")}else if(clScheme<.9){Artgene.evolve("Color Scheme","uncommon-4")}else{Artgene.evolve("Color Scheme","uncommon-5")}if(clChoice<1/29){Artgene.evolve("Palette","Desert Eye")}else if(clChoice<2/29){Artgene.evolve("Palette","Abduction")}else if(clChoice<3/29){Artgene.evolve("Palette","Enceladus Coral")}else if(clChoice<4/29){Artgene.evolve("Palette","City of the Ancients")}else if(clChoice<5/29){Artgene.evolve("Palette","Interdimensional")}else if(clChoice<6/29){Artgene.evolve("Palette","Abyss")}else if(clChoice<7/29){Artgene.evolve("Palette","Maverick")}else if(clChoice<8/29){Artgene.evolve("Palette","Manitoba")}else if(clChoice<9/29){Artgene.evolve("Palette","Bogota Mural")}else if(clChoice<10/29){Artgene.evolve("Palette","Aether")}else if(clChoice<11/29){Artgene.evolve("Palette","Saturnalia")}else if(clChoice<12/29){Artgene.evolve("Palette","Titan Flower")}else if(clChoice<13/29){Artgene.evolve("Palette","Europa Flower")}else if(clChoice<14/29){Artgene.evolve("Palette","Neptune")}else if(clChoice<15/29){Artgene.evolve("Palette","Well")}else if(clChoice<16/29){Artgene.evolve("Palette","Impossible Dream")}else if(clChoice<17/29){Artgene.evolve("Palette","Friend")}else if(clChoice<18/29){Artgene.evolve("Palette","Red Dawn")}else if(clChoice<19/29){Artgene.evolve("Palette","People Eater")}else if(clChoice<20/29){Artgene.evolve("Palette","Sega")}else if(clChoice<21/29){Artgene.evolve("Palette","Atari")}else if(clChoice<22/29){Artgene.evolve("Palette","Tapestry")}else if(clChoice<23/29){Artgene.evolve("Palette","Stratus")}else if(clChoice<24/29){Artgene.evolve("Palette","Silicate Haze")}else if(clChoice<25/29){Artgene.evolve("Palette","1945")}else if(clChoice<26/29){Artgene.evolve("Palette","2055")}else if(clChoice<27/29){Artgene.evolve("Palette","Verduras")}else if(clChoice<28/29){Artgene.evolve("Palette","Cianes")}else if(clChoice<28.7/29){Artgene.evolve("Palette","Amarillos")}else{Artgene.evolve("Palette","Spectrum")}if(clAm===1){Artgene.evolve("Number of Colors Sampled","1")}else if(clAm===2){Artgene.evolve("Number of Colors Sampled","2")}else if(clAm===3){Artgene.evolve("Number of Colors Sampled","3")}else{Artgene.evolve("Number of Colors Sampled","7")}if(ptnum<117){Artgene.evolve("Curve Length","Short")}else if(ptnum<134){Artgene.evolve("Curve Length","Medium")}else{Artgene.evolve("Curve Length","Long")}}function draw(){if(ltDk<ltDkProb){background(100)}else{background(clrDk)}translate(width/2,height/2);if(frameCount<ptnum){ps1LR=ps1[ps1.length-1].slice();ps2LR=ps2[ps2.length-1].slice();ps1LRMod=ps1[ps1.length-1].slice();ps2LRMod=ps2[ps2.length-1].slice();ps1LRFE=ps1LRMod.shift();ps2LRFE=ps2LRMod.shift();ps1LRMod.push(ps1LRFE);ps2LRMod.push(ps2LRFE);ps1Diff=subtract(ps1LRMod,ps1LR);ps2Diff=subtract(ps2LRMod,ps2LR);ps1Diff=multiply(ps1Diff,delta);ps2Diff=multiply(ps2Diff,delta);ps1NewLR=addRows(ps1LR,ps1Diff);ps2NewLR=addRows(ps2LR,ps2Diff);ps1.push(ps1NewLR.slice());ps2.push(ps2NewLR.slice())}let l=meanOfRow(ps1NewLR.slice());let e=meanOfRow(ps2NewLR.slice());translate(-l*ps1adj,-e*ps2adj);allColors.unshift(allColors.pop());allColors2.unshift(allColors2.pop());for(let l=1;l<ps1[0].length;l+=2){for(let e=plotst-1;e<ps1.length-randCnhi;e++){pt1={x:ps1adj*ps1[e][l],y:ps2adj*ps2[e][l]};pt2={x:ps1adj*ps1[e+randCn1][l],y:ps2adj*ps2[e+randCn1][l]};pt3={x:ps1adj*ps1[e+randCn2][l],y:ps2adj*ps2[e+randCn2][l]};pt4={x:ps1adj*ps1[e+randCn3][l],y:ps2adj*ps2[e+randCn3][l]};pt5={x:ps1adj*ps1[e+randCn4][l],y:ps2adj*ps2[e+randCn4][l]};pt6={x:ps1adj*ps1[e+randCn5][l],y:ps2adj*ps2[e+randCn5][l]};pt7={x:ps1adj*ps1[e+randCn6][l],y:ps2adj*ps2[e+randCn6][l]};pt8={x:ps1adj*ps1[e+randCn7][l],y:ps2adj*ps2[e+randCn7][l]};pt9={x:ps1adj*ps1[e+randCn8][l],y:ps2adj*ps2[e+randCn8][l]};pt10={x:ps1adj*ps1[e+randCn9][l],y:ps2adj*ps2[e+randCn9][l]};pt11={x:ps1adj*ps1[e+randCn10][l],y:ps2adj*ps2[e+randCn10][l]};pt12={x:ps1adj*ps1[e+randCn11][l],y:ps2adj*ps2[e+randCn11][l]};let t=pt1.x*scX1rand2;let o=pt1.y*scY1rand2;pt1={x:t,y:o};let r=pt2.x*scX2rand2;let c=pt2.y*scY2rand2;pt2={x:r,y:c};let s=pt3.x*scX3rand2;let a=pt3.y*scY3rand2;pt3={x:s,y:a};let n=pt4.x*scX4rand2;let p=pt4.y*scY4rand2;pt4={x:n,y:p};let d=pt5.x*scX5rand2;let i=pt5.y*scY5rand2;pt5={x:d,y:i};let f=pt6.x*scX6rand2;let h=pt6.y*scY6rand2;pt6={x:f,y:h};let C=pt7.x*scX7rand2;let x=pt7.y*scY7rand2;pt7={x:C,y:x};let g=pt8.x*scX8rand2;let u=pt8.y*scY8rand2;pt8={x:g,y:u};let v=pt9.x*scX9rand2;let y=pt9.y*scY9rand2;pt9={x:v,y};let A=pt10.x*scX10rand2;let m=pt10.y*scY10rand2;pt10={x:A,y:m};let b=pt11.x*scX11rand2;let j=pt11.y*scY11rand2;pt11={x:b,y:j};let S=pt12.x*scX12rand2;let X=pt12.y*scY12rand2;pt12={x:S,y:X};let Y=alpha(allColors[e]);if(ltDk<ltDkProb){stroke(100,Y)}else{stroke(hue(clrDk),saturation(clrDk),brightness(clrDk),Y*stAlAdj)}strokeWeight(pts[e]);strokeCap(ROUND);if(clScheme<.25){if(l===ps1[0].length-1||l===0){fill(allColors[e])}else{fill(allColors2[e])}}else if(clScheme<.5){if(l===ps1[0].length-1||l===0){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.6){if(l===ps1[0].length-1||l===0||l===round(ps1[0].length/2)){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.7){if(l===0||l===round(ps1[0].length/3)){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.8){if(l%2===0){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.9){if(l===ps1[0].length-1||l===0){fill(allColors[0])}else{fill(allColors2[e])}}else{if(l===ps1[0].length-1||l===0){fill(allColors2[0])}else{fill(allColors[e])}}beginShape();if(l%2===0){vertex(pt1.x,pt1.y);vertex(pt2.x,pt2.y);vertex(pt3.x,pt3.y);vertex(pt4.x,pt4.y);vertex(pt5.x,pt5.y);vertex(pt6.x,pt6.y);vertex(pt7.x,pt7.y);vertex(pt8.x,pt8.y);vertex(pt9.x,pt9.y);vertex(pt10.x,pt10.y);vertex(pt11.x,pt11.y);vertex(pt12.x,pt12.y)}else{vertex(pt1.x,pt1.y);bezierVertex(pt2.x,pt2.y,pt3.x,pt3.y,pt4.x,pt4.y);bezierVertex(pt5.x,pt5.y,pt6.x,pt6.y,pt7.x,pt7.y);bezierVertex(pt8.x,pt8.y,pt9.x,pt9.y,pt10.x,pt10.y);bezierVertex(pt11.x,pt11.y,pt12.x,pt12.y,pt1.x,pt1.y)}endShape(CLOSE)}}for(let l=0;l<ps1[0].length;l+=2){for(let e=plotst-1;e<ps1.length-randCnhi;e++){pt1={x:ps1adj*ps1[e][l],y:ps2adj*ps2[e][l]};pt2={x:ps1adj*ps1[e+randCn1][l],y:ps2adj*ps2[e+randCn1][l]};pt3={x:ps1adj*ps1[e+randCn2][l],y:ps2adj*ps2[e+randCn2][l]};pt4={x:ps1adj*ps1[e+randCn3][l],y:ps2adj*ps2[e+randCn3][l]};pt5={x:ps1adj*ps1[e+randCn4][l],y:ps2adj*ps2[e+randCn4][l]};pt6={x:ps1adj*ps1[e+randCn5][l],y:ps2adj*ps2[e+randCn5][l]};pt7={x:ps1adj*ps1[e+randCn6][l],y:ps2adj*ps2[e+randCn6][l]};pt8={x:ps1adj*ps1[e+randCn7][l],y:ps2adj*ps2[e+randCn7][l]};pt9={x:ps1adj*ps1[e+randCn8][l],y:ps2adj*ps2[e+randCn8][l]};pt10={x:ps1adj*ps1[e+randCn9][l],y:ps2adj*ps2[e+randCn9][l]};pt11={x:ps1adj*ps1[e+randCn10][l],y:ps2adj*ps2[e+randCn10][l]};pt12={x:ps1adj*ps1[e+randCn11][l],y:ps2adj*ps2[e+randCn11][l]};let t=pt1.x*scX1rand2;let o=pt1.y*scY1rand2;pt1={x:t,y:o};let r=pt2.x*scX2rand2;let c=pt2.y*scY2rand2;pt2={x:r,y:c};let s=pt3.x*scX3rand2;let a=pt3.y*scY3rand2;pt3={x:s,y:a};let n=pt4.x*scX4rand2;let p=pt4.y*scY4rand2;pt4={x:n,y:p};let d=pt5.x*scX5rand2;let i=pt5.y*scY5rand2;pt5={x:d,y:i};let f=pt6.x*scX6rand2;let h=pt6.y*scY6rand2;pt6={x:f,y:h};let C=pt7.x*scX7rand2;let x=pt7.y*scY7rand2;pt7={x:C,y:x};let g=pt8.x*scX8rand2;let u=pt8.y*scY8rand2;pt8={x:g,y:u};let v=pt9.x*scX9rand2;let y=pt9.y*scY9rand2;pt9={x:v,y};let A=pt10.x*scX10rand2;let m=pt10.y*scY10rand2;pt10={x:A,y:m};let b=pt11.x*scX11rand2;let j=pt11.y*scY11rand2;pt11={x:b,y:j};let S=pt12.x*scX12rand2;let X=pt12.y*scY12rand2;pt12={x:S,y:X};let Y=alpha(allColors[e]);if(ltDk<ltDkProb){stroke(100,Y)}else{stroke(hue(clrDk),saturation(clrDk),brightness(clrDk),Y*stAlAdj)}strokeWeight(pts[e]);strokeCap(ROUND);if(clScheme<.25){if(l===ps1[0].length-1||l===0){fill(allColors[e])}else{fill(allColors2[e])}}else if(clScheme<.5){if(l===ps1[0].length-1||l===0){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.6){if(l===ps1[0].length-1||l===0||l===round(ps1[0].length/2)){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.7){if(l===0||l===round(ps1[0].length/3)){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.8){if(l%2===0){fill(allColors2[e])}else{fill(allColors[e])}}else if(clScheme<.9){if(l===ps1[0].length-1||l===0){fill(allColors[0])}else{fill(allColors2[e])}}else{if(l===ps1[0].length-1||l===0){fill(allColors2[0])}else{fill(allColors[e])}}beginShape();if(l%2===0){vertex(pt1.x,pt1.y);vertex(pt2.x,pt2.y);vertex(pt3.x,pt3.y);vertex(pt4.x,pt4.y);vertex(pt5.x,pt5.y);vertex(pt6.x,pt6.y);vertex(pt7.x,pt7.y);vertex(pt8.x,pt8.y);vertex(pt9.x,pt9.y);vertex(pt10.x,pt10.y);vertex(pt11.x,pt11.y);vertex(pt12.x,pt12.y)}else{vertex(pt1.x,pt1.y);bezierVertex(pt2.x,pt2.y,pt3.x,pt3.y,pt4.x,pt4.y);bezierVertex(pt5.x,pt5.y,pt6.x,pt6.y,pt7.x,pt7.y);bezierVertex(pt8.x,pt8.y,pt9.x,pt9.y,pt10.x,pt10.y);bezierVertex(pt11.x,pt11.y,pt12.x,pt12.y,pt1.x,pt1.y)}endShape(CLOSE)}}if(static<stProb){if(frameCount===350){noLoop();noFill();rectMode(CENTER);stroke(color(hue(bordColor),saturation(bordColor)+25,brightness(bordColor),rand(75,85)));strokeWeight(width/rand(110,120));let t=.02;let o=.055;if(rand()<.33){rect(l*ps1adj,e*ps2adj,width-width*t,height-height*t,0)}rect(l*ps1adj,e*ps2adj,width-width*o,height-height*o,0);loadPixels();addGrainEffect();updatePixels();preview()}}}function betterLerpColorHSB(l,e,t){let o=hue(l);let r=hue(e);if(abs(o-r)>180){if(o>r)r+=360;else o+=360}const c=lerp(o,r,t)%360;let s=saturation(l);let a=saturation(e);let n=brightness(l);let p=brightness(e);let d=lerp(s,a,t);let i=lerp(n,p,t);let f=alpha(l);let h=alpha(e);let C=lerp(f,h,t);return color(c,d,i,C)}function addGrainEffect(){for(let l=0;l<pixels.length;l+=round(height*.00175)){let e=pixels[l]+rand(-grnAm,grnAm);let t=pixels[l+1];let o=pixels[l+2];let r=pixels[l+3];pixels[l]=e;pixels[l+1]=t;pixels[l+2]=o;pixels[l+3]=r}}function seededShuffle(l){let e=l.length,t,o;while(0!==e){o=Math.floor(rand(e));e-=1;t=l[e];l[e]=l[o];l[o]=t}return l}function scaleCanvas(l){width=l.windowWidth;height=l.windowHeight;let e=1;let t=e;let o=width/height;if(o<t){height=width/t}else{width=height*t}l.resizeCanvas(width,height)}function meanOfRow(l){let e=l.reduce(((l,e)=>l+e),0);let t=e/l.length;return t}function subtract(l,e){return l.map(((l,t)=>l-e[t]))}function addRows(l,e){return l.map(((l,t)=>l+e[t]))}function multiply(l,e){return l.map((l=>l*e))}function keyPressed(){if(key==="s"){saveCanvas("Aurora","png")}}