# Github Workflow to autogenerate docs and push to repository wiki

name: Autogenerate docs

on:
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  docs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Cache npm dependencies
        id: cache-npm-deps
        uses: actions/cache@v3
        with:
          # we cache node_modules directly, it may have downsides, but much faster
          # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/#fn1
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-npm-deps.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Checkout the wiki repository
        uses: actions/checkout@v2
        with:
          repository: "${{ github.repository }}.wiki"
          # As of Jul 2021, the default branch of a GitHub wiki is `master`, not `main`
          ref: master
          path: .wiki

      - name: Generate the Wiki Page using foundry
        run: |
          set -xe
          forge doc --build --out wiki

      - name: Configure the GitHub wiki identity
        working-directory: .wiki
        # "${GITHUB_ACTOR}@users.noreply.github.com" is associated to the actor without real emails
        run: |
          set -xe
          git config user.name  "[bot] ${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Update the wiki page
        working-directory: .wiki
        # --allow-empty may be good enough for almost all the situations,
        # but maybe you want to do `if git commit ... ; then` if you don't want to record an empty commit
        run: |
          set -xe
          git add .
          git commit --allow-empty -m "update the wiki page by bot (${GITHUB_WORKFLOW})"
          git push origin master
